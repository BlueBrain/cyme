/*
 * CYME, License
 *
 * Timothee Ewart - Swiss Federal Institute of technology in Lausanne
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef CYME_UNROLL_DIV_HPP
#define CYME_UNROLL_DIV_HPP

namespace numeric{
    /**
     \brief free function / operator between two vectors this function uses the return value optimization
     */
    template<class T,memory::simd O, int N>
    inline vec_unroll<T,O,N> operator/ (const vec_unroll<T,O,N>& lhs, const vec_unroll<T,O,N>& rhs){
        vec_unroll<T,O,N> nrv;
        nrv.r0 = lhs.r0 / rhs.r0;
        nrv.r1 = lhs.r1 / rhs.r1;
        nrv.r2 = lhs.r2 / rhs.r2;
        nrv.r3 = lhs.r3 / rhs.r3;
//        for(int i=0; i<N; ++i)
//          nrv.data[i] = lhs.data[i]/rhs.data[i];
        return nrv;
    }
} //end namespace
#endif
